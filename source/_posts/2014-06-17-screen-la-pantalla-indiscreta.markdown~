---
layout: post
title: "screen, la pantalla indiscreta"
date: 2014-06-17 20:20
comments: true
categories: linux
---

{% img right /images/posts/screen.png 'conceptos screen' %}

Antes de preparar una serie de entradas dedicadas a la configuración y despliegue de switches (Cisco Catalyst) surge la necesidad de identificar las herramientas que se han de utilizar para realizar la tarea.

La herramienta básica y más importante, al menos durante las labores de configuración inical, es un cliente que nos permita establecer una conexión vía consola con los switches. Aunque hay muchas alternativas[^1] hay una aplicación que por su potencia y versatilidad no debería faltar en ningún equipo que corra LiNUX: **screen**.

En este primer post dedicado a *screen* vamos a ver su funcionalidad como cliente para conectarse a una consola serie junto con los comandos más habituales para trabajar de forma cómoda.

<!-- more -->

Como se indicaba en los párrafos anteriores, *screen* es una herramienta muy potente y versátil que nos permite por un lado disponer de múltiples ventanas (shells) dentro de una sesión, con la peculiaridad de que lo que se esta ejecutando en estas ventanas se puede mantener en ejecución cuando salimos. No solo eso, podemos volver a conectarnos desde cualquier otra consola a una sesión previamente establecida retomando el estado de las ventanas tal como se encontraban al dejarlas.

Además de lo anterior, que por si solo ya es una funcionalidad más que interesante en el trabajo con servidores, permite establecer conexiones directas a través del puerto serie (consola) con todos aquellos dispositivos que dispongan de este tipo de conectores.

# Conceptos

1.  **Sesión:** Es el área de trabajo creada al ejecutar el comando.
2.  **Ventana:** Es la shell(s) que se abre(n) dentro de la sesión. 

También es posible mantener varias ventanas en la misma sesión separadas en **regiones** (horizontales y/o verticales).

# Conexión a una consola serie

* Identificación el dispositivo:

``` sh
dmesg | grep tty
```

* Conexión:

``` sh
screen /dev/ttyXXXX baud_rate,cs8|cs7,ixon|-ixon,ixoff|-ixoff,istrip|-istrip
```

Donde:

`/dev/ttyXXXX`: Puerto serie.   
`baud_rate`: Habitualmente 300, 1200, 9600 o 19200.   
`cs8` o `cs7`: Transmisión de 8 o 7 bits por byte.   
`ixon` o `-ixon`: Habilita o deshabilita el control de flujo por software en envío.   
`ixoff` o `-ixoff`: Habilita o deshabilita el control de flujo por software en recepción.   
`istrip` o `-istrip`: Elimina o mantiene el octavo bit de cada byte recibido.   


Todos los switches Cisco Catalyst disponen de un puerto de consola accesible con los parámetros:

* Connection speed = 9600 bps
* Data bits = 8
* Parity = None
* Stop bits = 1
* Flow control = None

Para conectarnos utilizaremos el siguiente comando:

``` sh
screen /dev/ttyUSB0 9600,cs8,-ixon,-ixoff,-istrip
```

Que se puede acortar quedando:

``` sh
screen /dev/ttyUSB0
```

# Referencias

[5 Linux / Unix Commands For Connecting To The Serial Console](http://www.cyberciti.biz/hardware/5-linux-unix-commands-for-connecting-to-the-serial-console/)

[Screen User's Manual](https://www.gnu.org/software/screen/manual/screen.html)

[^1]: Disponemos de clientes completos como [Putty](http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html) y [minicom](http://linux.die.net/man/1/minicom) además de herramientas más sencillas como [cu](http://linux.die.net/man/1/cu)




